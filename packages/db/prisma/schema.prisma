// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  githubId  String    @unique
  username  String
  email     String
  image     String
  plan      Plan      @relation(fields: [planId], references: [id])
  createdAt DateTime  @default(now())
  repos     Repo[]
  Payment   Payment[]
  planId    String
}

enum ExistingPlan {
  FREE
  PRO
  ENTERPRISE
}

model Plan {
  id          String       @id @default(cuid())
  name        ExistingPlan @unique @default(FREE)
  price       Float
  maxRepos    Int // important field
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  User        User[]
  Payment     Payment[]
}

model Payment {
  id       String   @id @default(cuid())
  userId   String
  user     User     @relation(fields: [userId], references: [id])
  status   String
  amount   Int
  planId   String
  plan     Plan     @relation(fields: [planId], references: [id])
  cretedAt DateTime @default(now())
}

model Repo {
  id             String        @id @default(cuid())
  repoId         String        @unique
  repoName       String
  repoFullName   String
  repoURL        String
  // FOR NOW ONLY, to get language, you can get it from the URL on installation
  languages      String[]
  installationId String
  isActive       Boolean       @default(false)
  User           User          @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  pullRequests   PullRequest[]
  Issue          Issue[]
}

model PullRequest {
  id         String   @id @default(cuid())
  prNumber   String
  title      String
  commitHash String
  state      String
  createAt   DateTime @default(now())
  Repo       Repo     @relation(fields: [repoId], references: [id])
  repoId     String
  reviews    Review[]
}

model Review {
  id            String      @id @default(cuid())
  reviewSummary String
  tags          String[]
  commitHash    String
  aiScore       Int?
  createdAt     DateTime    @default(now())
  PullRequest   PullRequest @relation(fields: [pullRequestId], references: [id])
  pullRequestId String
}

model Issue {
  id        String   @id @default(cuid())
  title     String
  body      String
  state     String
  tags      String[]
  createdAt DateTime @default(now())
  Repo      Repo     @relation(fields: [repoId], references: [id])
  repoId    String
}
